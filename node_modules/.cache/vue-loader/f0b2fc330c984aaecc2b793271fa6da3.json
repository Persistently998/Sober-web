{"remainingRequest":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/MAC1/javaproject/eladmin-web/src/components/Crud/CRUD.operation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/MAC1/javaproject/eladmin-web/src/components/Crud/CRUD.operation.vue","mtime":1619011782524},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CRUD, { crud } from '@crud/crud'\n\nfunction sortWithRef(src, ref) {\n  const result = Object.assign([], ref)\n  let cursor = -1\n  src.forEach(e => {\n    const idx = result.indexOf(e)\n    if (idx === -1) {\n      cursor += 1\n      result.splice(cursor, 0, e)\n    } else {\n      cursor = idx\n    }\n  })\n  return result\n}\n\nexport default {\n  mixins: [crud()],\n  props: {\n    permission: {\n      type: Object,\n      default: () => { return {} }\n    },\n    hiddenColumns: {\n      type: Array,\n      default: () => { return [] }\n    },\n    ignoreColumns: {\n      type: Array,\n      default: () => { return [] }\n    }\n  },\n  data() {\n    return {\n      tableColumns: [],\n      allColumnsSelected: true,\n      allColumnsSelectedIndeterminate: false,\n      tableUnwatcher: null,\n      // 忽略下次表格列变动\n      ignoreNextTableColumnsChange: false\n    }\n  },\n  watch: {\n    'crud.props.table'() {\n      this.updateTableColumns()\n      this.tableColumns.forEach(column => {\n        if (this.hiddenColumns.indexOf(column.property) !== -1) {\n          column.visible = false\n          this.updateColumnVisible(column)\n        }\n      })\n    },\n    'crud.props.table.store.states.columns'() {\n      this.updateTableColumns()\n    }\n  },\n  created() {\n    this.crud.updateProp('searchToggle', true)\n  },\n  methods: {\n    updateTableColumns() {\n      const table = this.crud.getTable()\n      if (!table) {\n        this.tableColumns = []\n        return\n      }\n      let cols = null\n      const columnFilter = e => e && e.type === 'default' && e.property && this.ignoreColumns.indexOf(e.property) === -1\n      const refCols = table.columns.filter(columnFilter)\n      if (this.ignoreNextTableColumnsChange) {\n        this.ignoreNextTableColumnsChange = false\n        return\n      }\n      this.ignoreNextTableColumnsChange = false\n      const columns = []\n      const fullTableColumns = table.$children.map(e => e.columnConfig).filter(columnFilter)\n      cols = sortWithRef(fullTableColumns, refCols)\n      cols.forEach(config => {\n        const column = {\n          property: config.property,\n          label: config.label,\n          visible: refCols.indexOf(config) !== -1\n        }\n        columns.push(column)\n      })\n      this.tableColumns = columns\n    },\n    toDelete(datas) {\n      this.$confirm(`确认删除选中的${datas.length}条数据?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.crud.delAllLoading = true\n        this.crud.doDelete(datas)\n      }).catch(() => {\n      })\n    },\n    handleCheckAllChange(val) {\n      if (val === false) {\n        this.allColumnsSelected = true\n        return\n      }\n      this.tableColumns.forEach(column => {\n        if (!column.visible) {\n          column.visible = true\n          this.updateColumnVisible(column)\n        }\n      })\n      this.allColumnsSelected = val\n      this.allColumnsSelectedIndeterminate = false\n    },\n    handleCheckedTableColumnsChange(item) {\n      let totalCount = 0\n      let selectedCount = 0\n      this.tableColumns.forEach(column => {\n        ++totalCount\n        selectedCount += column.visible ? 1 : 0\n      })\n      if (selectedCount === 0) {\n        this.crud.notify('请至少选择一列', CRUD.NOTIFICATION_TYPE.WARNING)\n        this.$nextTick(function() {\n          item.visible = true\n        })\n        return\n      }\n      this.allColumnsSelected = selectedCount === totalCount\n      this.allColumnsSelectedIndeterminate = selectedCount !== totalCount && selectedCount !== 0\n      this.updateColumnVisible(item)\n    },\n    updateColumnVisible(item) {\n      const table = this.crud.props.table\n      const vm = table.$children.find(e => e.prop === item.property)\n      const columnConfig = vm.columnConfig\n      if (item.visible) {\n        // 找出合适的插入点\n        const columnIndex = this.tableColumns.indexOf(item)\n        vm.owner.store.commit('insertColumn', columnConfig, columnIndex + 1, null)\n      } else {\n        vm.owner.store.commit('removeColumn', columnConfig, null)\n      }\n      this.ignoreNextTableColumnsChange = true\n    },\n    toggleSearch() {\n      this.crud.props.searchToggle = !this.crud.props.searchToggle\n    }\n  }\n}\n",null]}