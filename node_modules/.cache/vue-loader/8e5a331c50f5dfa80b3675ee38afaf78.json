{"remainingRequest":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/MAC1/javaproject/eladmin-web/src/views/system/menu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/MAC1/javaproject/eladmin-web/src/views/system/menu/index.vue","mtime":1619011782553},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/eladmin-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudMenu from '@/api/system/menu'\nimport IconSelect from '@/components/IconSelect'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport { LOAD_CHILDREN_OPTIONS } from '@riophae/vue-treeselect'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport DateRangePicker from '@/components/DateRangePicker'\n\n// crud交由presenter持有\nconst defaultForm = { id: null, title: null, menuSort: 999, path: null, component: null, componentName: null, iframe: false, roles: [], pid: 0, icon: null, cache: false, hidden: false, type: 0, permission: null }\nexport default {\n  name: 'Menu',\n  components: { Treeselect, IconSelect, crudOperation, rrOperation, udOperation, DateRangePicker },\n  cruds() {\n    return CRUD({ title: '菜单', url: 'api/menus', crudMethod: { ...crudMenu }})\n  },\n  mixins: [presenter(), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      menus: [],\n      permission: {\n        add: ['admin', 'menu:add'],\n        edit: ['admin', 'menu:edit'],\n        del: ['admin', 'menu:del']\n      },\n      rules: {\n        title: [\n          { required: true, message: '请输入标题', trigger: 'blur' }\n        ],\n        path: [\n          { required: true, message: '请输入地址', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 新增与编辑前做的操作\n    [CRUD.HOOK.afterToCU](crud, form) {\n      this.menus = []\n      if (form.id != null) {\n        if (form.pid === null) {\n          form.pid = 0\n        }\n        this.getSupDepts(form.id)\n      } else {\n        this.menus.push({ id: 0, label: '顶级类目', children: null })\n      }\n    },\n    getMenus(tree, treeNode, resolve) {\n      const params = { pid: tree.id }\n      setTimeout(() => {\n        crudMenu.getMenus(params).then(res => {\n          resolve(res.content)\n        })\n      }, 100)\n    },\n    getSupDepts(id) {\n      crudMenu.getMenuSuperior(id).then(res => {\n        const children = res.map(function(obj) {\n          if (!obj.leaf && !obj.children) {\n            obj.children = null\n          }\n          return obj\n        })\n        this.menus = [{ id: 0, label: '顶级类目', children: children }]\n      })\n    },\n    loadMenus({ action, parentNode, callback }) {\n      if (action === LOAD_CHILDREN_OPTIONS) {\n        crudMenu.getMenusTree(parentNode.id).then(res => {\n          parentNode.children = res.map(function(obj) {\n            if (!obj.leaf) {\n              obj.children = null\n            }\n            return obj\n          })\n          setTimeout(() => {\n            callback()\n          }, 100)\n        })\n      }\n    },\n    // 选中图标\n    selected(name) {\n      this.form.icon = name\n    }\n  }\n}\n",null]}