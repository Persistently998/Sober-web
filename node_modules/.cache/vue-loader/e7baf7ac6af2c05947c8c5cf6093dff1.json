{"remainingRequest":"/Volumes/MAC1/javaproject/Sober-web1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/MAC1/javaproject/Sober-web1/src/views/system/dept/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/MAC1/javaproject/Sober-web1/src/views/system/dept/index.vue","mtime":1619011782552},{"path":"/Volumes/MAC1/javaproject/Sober-web1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/Sober-web1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/MAC1/javaproject/Sober-web1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MAC1/javaproject/Sober-web1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudDept from '@/api/system/dept'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport { LOAD_CHILDREN_OPTIONS } from '@riophae/vue-treeselect'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport DateRangePicker from '@/components/DateRangePicker'\n\nconst defaultForm = { id: null, name: null, isTop: '1', subCount: 0, pid: null, deptSort: 999, enabled: 'true' }\nexport default {\n  name: 'Dept',\n  components: { Treeselect, crudOperation, rrOperation, udOperation, DateRangePicker },\n  cruds() {\n    return CRUD({ title: '部门', url: 'api/dept', crudMethod: { ...crudDept }})\n  },\n  mixins: [presenter(), header(), form(defaultForm), crud()],\n  // 设置数据字典\n  dicts: ['dept_status'],\n  data() {\n    return {\n      depts: [],\n      rules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' }\n        ],\n        deptSort: [\n          { required: true, message: '请输入序号', trigger: 'blur', type: 'number' }\n        ]\n      },\n      permission: {\n        add: ['admin', 'dept:add'],\n        edit: ['admin', 'dept:edit'],\n        del: ['admin', 'dept:del']\n      },\n      enabledTypeOptions: [\n        { key: 'true', display_name: '正常' },\n        { key: 'false', display_name: '禁用' }\n      ]\n    }\n  },\n  methods: {\n    getDeptDatas(tree, treeNode, resolve) {\n      const params = { pid: tree.id }\n      setTimeout(() => {\n        crudDept.getDepts(params).then(res => {\n          resolve(res.content)\n        })\n      }, 100)\n    },\n    // 新增与编辑前做的操作\n    [CRUD.HOOK.afterToCU](crud, form) {\n      if (form.pid !== null) {\n        form.isTop = '0'\n      } else if (form.id !== null) {\n        form.isTop = '1'\n      }\n      form.enabled = `${form.enabled}`\n      if (form.id != null) {\n        this.getSupDepts(form.id)\n      } else {\n        this.getDepts()\n      }\n    },\n    getSupDepts(id) {\n      crudDept.getDeptSuperior(id).then(res => {\n        const date = res.content\n        this.buildDepts(date)\n        this.depts = date\n      })\n    },\n    buildDepts(depts) {\n      depts.forEach(data => {\n        if (data.children) {\n          this.buildDepts(data.children)\n        }\n        if (data.hasChildren && !data.children) {\n          data.children = null\n        }\n      })\n    },\n    getDepts() {\n      crudDept.getDepts({ enabled: true }).then(res => {\n        this.depts = res.content.map(function(obj) {\n          if (obj.hasChildren) {\n            obj.children = null\n          }\n          return obj\n        })\n      })\n    },\n    // 获取弹窗内部门数据\n    loadDepts({ action, parentNode, callback }) {\n      if (action === LOAD_CHILDREN_OPTIONS) {\n        crudDept.getDepts({ enabled: true, pid: parentNode.id }).then(res => {\n          parentNode.children = res.content.map(function(obj) {\n            if (obj.hasChildren) {\n              obj.children = null\n            }\n            return obj\n          })\n          setTimeout(() => {\n            callback()\n          }, 100)\n        })\n      }\n    },\n    // 提交前的验证\n    [CRUD.HOOK.afterValidateCU]() {\n      if (this.form.pid !== null && this.form.pid === this.form.id) {\n        this.$message({\n          message: '上级部门不能为空',\n          type: 'warning'\n        })\n        return false\n      }\n      if (this.form.isTop === '1') {\n        this.form.pid = null\n      }\n      return true\n    },\n    // 改变状态\n    changeEnabled(data, val) {\n      this.$confirm('此操作将 \"' + this.dict.label.dept_status[val] + '\" ' + data.name + '部门, 是否继续？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        crudDept.edit(data).then(res => {\n          this.crud.notify(this.dict.label.dept_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(err => {\n          data.enabled = !data.enabled\n          console.log(err.response.data.message)\n        })\n      }).catch(() => {\n        data.enabled = !data.enabled\n      })\n    },\n    checkboxT(row, rowIndex) {\n      return row.id !== 1\n    }\n  }\n}\n",null]}